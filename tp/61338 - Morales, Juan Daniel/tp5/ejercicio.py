import matplotlib.pyplot as plt
import pandas as pd
import streamlit as st

# ---------------------------------------------------------------
# CONFIGURACI칍N DE LA P츼GINA
# ---------------------------------------------------------------
st.set_page_config(page_title="Reporte de productos", layout="wide")

# ---------------------------------------------------------------
# BARRA LATERAL
# ---------------------------------------------------------------
st.sidebar.title("Configuraci칩n")

# Selector de archivo CSV
archivo = st.sidebar.file_uploader("Seleccion치 un CSV", type=["csv"])

# Si no hay archivo, mostrar aviso y detener ejecuci칩n
if not archivo:
    st.info("Sub칤 un archivo CSV desde la barra lateral para comenzar.")
    st.stop()

# Lectura del CSV
df = pd.read_csv(archivo)

# Validar que tenga las columnas requeridas
columnas_requeridas = {"a침o", "mes", "producto", "cantidad", "ingreso", "costo"}
if not columnas_requeridas.issubset(df.columns):
    st.error("El archivo CSV no contiene las columnas requeridas: a침o, mes, producto, cantidad, ingreso, costo.")
    st.stop()

# Selector de a침o (ordenado)
a침os_disponibles = sorted(df["a침o"].unique())
a침o_seleccionado = st.sidebar.selectbox("Seleccion치 un a침o", a침os_disponibles)

# Filtrar por a침o seleccionado
df_a침o = df[df["a침o"] == a침o_seleccionado]

# Si no hay datos para el a침o, mostrar advertencia
if df_a침o.empty:
    st.warning("El a침o seleccionado no tiene datos para mostrar.")
    st.stop()

# ---------------------------------------------------------------
# ENCABEZADO PRINCIPAL
# ---------------------------------------------------------------
st.title("Informe de Productos 游늳")
st.caption("M칠tricas resumidas y evoluci칩n de precios/costos por a침o y mes.")

# ---------------------------------------------------------------
# PROCESAMIENTO DE DATOS
# ---------------------------------------------------------------
# Agrupar por producto y mes
agrupado = df_a침o.groupby(["producto", "mes"]).agg({
    "cantidad": "sum",
    "ingreso": "sum",
    "costo": "sum"
}).reset_index()

# Calcular m칠tricas por mes
agrupado["precio_promedio"] = agrupado["ingreso"] / agrupado["cantidad"]
agrupado["costo_promedio"] = agrupado["costo"] / agrupado["cantidad"]

# ---------------------------------------------------------------
# VISUALIZACI칍N POR PRODUCTO
# ---------------------------------------------------------------
productos = sorted(agrupado["producto"].unique())

for producto in productos:
    datos = agrupado[agrupado["producto"] == producto]

    # Contenedor con borde para cada producto
    with st.container():
        # T칤tulo del producto
        st.markdown(f"## :red[{producto}]")

        # Dividir en dos columnas (30% - 70%)
        col1, col2 = st.columns([0.3, 0.7])

        # -------------------------
        # Columna 1: M칠tricas
        # -------------------------
        with col1:
            cantidad_total = datos["cantidad"].sum()
            precio_promedio = datos["precio_promedio"].mean()
            costo_promedio = datos["costo_promedio"].mean()

            st.metric("Cantidad de ventas", f"{cantidad_total:,.0f}".replace(",", "."))
            st.metric("Precio promedio", f"${precio_promedio:,.2f}")
            st.metric("Costo promedio", f"${costo_promedio:,.2f}")

        # -------------------------
        # Columna 2: Gr치fico
        # -------------------------
        with col2:
            fig, ax = plt.subplots(figsize=(8, 3))

            # L칤nea azul (precio)
            ax.plot(
                datos["mes"], datos["precio_promedio"],
                color="#1f77b4", marker="o", label="Precio promedio"
            )

            # L칤nea roja (costo)
            ax.plot(
                datos["mes"], datos["costo_promedio"],
                color="#d62728", marker="o", label="Costo promedio"
            )

            # Formato del gr치fico
            ax.set_title("Evoluci칩n de precio y costo promedio")
            ax.set_xlabel("Mes")
            ax.set_ylabel("Monto")
            ax.grid(True, linestyle="--", alpha=0.3)
            ax.legend(loc="best")

            st.pyplot(fig)
